name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'

      - name: Create .env.local
        # Required secrets: NEXT_PUBLIC_SUPABASE_URL, NEXT_PUBLIC_SUPABASE_ANON_KEY, SUPABASE_SERVICE_ROLE_KEY
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co' }}" >> .env.local
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key' }}" >> .env.local
          echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY || 'placeholder-service-key' }}" >> .env.local

      - name: Install dependencies
        run: npm ci

      - name: Install optional dependencies
        run: npm install --no-save lightningcss-linux-x64-gnu @tailwindcss/oxide-linux-x64-gnu

      - name: Run TypeScript check
        run: npm run type-check

      - name: Run ESLint
        run: npm run lint

      - name: Check code formatting
        run: npm run format:check

      - name: Build project
        run: npm run build

  test:
    name: Test (when implemented)
    runs-on: ubuntu-latest
    needs: quality-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install optional dependencies
        run: npm install --no-save lightningcss-linux-x64-gnu @tailwindcss/oxide-linux-x64-gnu

      - name: Run tests (when implemented)
        run: echo "Tests will be implemented later"
        # run: npm test

  # Deploy preview deshabilitado - Vercel maneja el deployment autom√°ticamente
  # deploy-preview:
  #   name: Deploy Preview
  #   runs-on: ubuntu-latest
  #   needs: [quality-check, test]
  #   if: github.event_name == 'pull_request'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v5
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v5
  #       with:
  #         node-version: '20'
  #         cache: 'npm'
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Build project
  #       run: npm run build
